
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
          &kp ESC        &kp N1          &kp N2          &kp N3           &kp N4  &kp N5                   &kp DELETE                                                                                                     &mo 2  &kp N6   &kp N7     &kp N8    &kp N9    &kp N0      &kp EQUAL
          &kp TAB         &kp Q           &kp W           &kp E            &kp R   &kp T              &kp C_VOLUME_UP                                                                                           &kp C_VOLUME_UP   &kp Y    &kp U      &kp I     &kp O     &kp P       &kp BSLH
     &kp CAPSLOCK         &kp A           &kp S           &kp D            &kp F   &kp G            &kp C_VOLUME_DOWN  &kp RIGHT_CONTROL              &none                  &kp LEFT_ARROW  &kp RIGHT_ARROW  &kp C_VOLUME_DOWN   &kp H    &kp J      &kp K     &kp L  &kp SEMI      &kp MINUS
        &kp LSHFT         &kp Z           &kp X           &kp C            &kp V   &kp B                        &none              &none  &kp RIGHT_COMMAND   &none   &none  &kp DOWN_ARROW            &none              &none   &kp N    &kp M  &kp COMMA   &kp DOT  &kp FSLH      &kp RSHFT
 &kp LEFT_CONTROL  &kp UP_ARROW  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW                            &kp SPACE      &kp RIGHT_ALT       &kp LEFT_ALT                       &kp SPACE       &kp RETURN      &kp BACKSPACE          &kp SQT  &kp GRAVE  &kp LBKT  &kp RBKT  &kp RIGHT_ALT
            >;
        };

        layer_keypad {
            bindings = <
 &trans      &trans      &trans      &trans      &trans      &trans             &trans                                                           &trans         &trans  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &trans
 &trans      &trans      &trans      &kp F9     &kp F10     &kp F11            &kp F12                                                            &none         &trans   &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS  &trans
 &trans      &kp F1      &kp F2      &kp F3      &kp F4      &kp F5             &kp F6  &trans  &trans                  &trans  &trans            &none  &kp BACKSPACE   &kp KP_N4     &kp KP_N5      &kp KP_N6      &kp KP_PLUS  &trans
 &trans  &kp LG(F1)  &kp LG(F2)  &kp LG(F3)  &kp LG(F4)  &kp LG(F5)              &none   &none  &trans   &none   &none  &trans   &none            &none         &trans   &kp KP_N1     &kp KP_N2      &kp KP_N3     &kp KP_ENTER  &trans
 &trans  &kp LG(F6)  &kp LG(F7)  &kp LG(F8)  &kp LG(F9)                         &trans  &trans  &trans                  &trans  &trans  &kp KP_NUMBER_0                     &trans        &trans     &kp KP_DOT           &trans  &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                             &none                                                                              &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &none
  &none         &none         &none         &none         &none         &none                       &bootloader                                                                         &bootloader         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none            &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR   &none                  &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none                             &none       &none   &none   &none   &none       &none       &none                   &none         &none         &none         &none         &none         &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC                                 &rgb_ug RGB_TOG  &bl BL_TOG   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG                  &bl BL_INC    &bl BL_DEC         &none         &none   &none
            >;
        };

        layer_right {
            bindings = <
     &kp EQUAL     &kp N0    &kp N9     &kp N8   &kp N7  &kp N6                       &trans                                                               &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &kp BACKSLASH      &kp P     &kp O      &kp I    &kp U   &kp Y              &kp C_VOLUME_UP                                                               &trans  &trans  &trans  &trans  &trans  &trans  &trans
     &kp MINUS   &kp SEMI     &kp L      &kp K    &kp J   &kp H            &kp C_VOLUME_DOWN            &trans     &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &kp SLASH   &kp DOT  &kp COMMA    &kp M   &kp N                       &trans            &trans  &kp SPACE  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
    &kp LA(F4)   &kp RBKT  &kp LBKT  &kp GRAVE  &kp SQT                         &kp LEFT_ALT  &kp LEFT_COMMAND     &trans                  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_Layer__4 {
            bindings = <
               &trans  &kp RA(NUMBER_1)  &kp RA(NUMBER_2)    &kp RA(NUMBER_3)  &kp RA(NUMBER_4)  &kp RA(NUMBER_5)            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
               &trans         &kp RA(Q)         &kp RA(W)           &kp RA(E)         &kp RA(R)         &kp RA(T)            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &kp RA(LEFT_CONTROL)         &kp RA(A)         &kp RA(S)           &kp RA(D)         &kp RA(F)         &kp RA(G)            &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
               &trans         &kp RA(Z)         &kp RA(X)           &kp RA(C)         &kp RA(V)         &kp RA(B)            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
               &trans  &kp RA(UP_ARROW)            &trans  &kp RA(DOWN_ARROW)            &trans                              &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

    };
};
